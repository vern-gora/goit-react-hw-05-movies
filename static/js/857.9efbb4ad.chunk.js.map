{"version":3,"file":"static/js/857.9efbb4ad.chunk.js","mappings":"2LACA,EAAuB,wB,SCIVA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACGF,EAASG,KAAI,SAAAC,GAAI,OAChB,eAAkBC,UAAWC,EAA7B,UACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,EAAKI,IACpBC,MAAO,CAAEC,KAAMT,GACfI,UAAWC,EAHb,SAKGF,EAAKO,kBANDP,EAAKI,GADE,KAavB,C,sICrBD,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAuH,oCAAvH,EAAmL,yCAAnL,EAA8O,mCAA9O,EAAwR,wB,SCK3QI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,OACE,+BACE,mBAAQX,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAgBO,SAZf,SAAAI,GACtBA,EAAMC,iBACNL,EAASI,EACV,EASK,WACE,oBAAQE,KAAK,SAASd,UAAWC,EAAjC,WACE,SAAC,MAAD,CAAUD,UAAWC,EAAUc,KAAM,MACrC,iBAAMf,UAAWC,EAAjB,wBAGF,kBACED,UAAWC,EACXa,KAAK,OACLE,aAAa,MACbC,KAAK,QACLC,WAAS,EACTC,YAAY,eACZC,MAAOV,EACPW,QArBY,SAAAT,GACpBD,EAAaC,EAAMU,OAAOF,MAC3B,UAyBF,E,kBCrCKG,EAAW,mCAAG,WAAMC,GAAN,6EACdA,EADc,wBAEVC,EAFU,0DAE+CD,EAF/C,oBAFJ,oCAEI,kBAISE,EAAAA,EAAAA,IAAUD,GAJnB,cAIRE,EAJQ,yBAKPA,EAASC,MALF,gCAOdC,QAAQC,IAAR,MAPc,yDAAH,sD,QCkEjB,EA5Dc,WACZ,OAA4CrB,EAAAA,EAAAA,YAA5C,eAAOsB,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SA6CrC,OA1BAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBF,GAAsC,OAAhBA,EAA1B,CAEQ,IACSG,EADV,mCACL,uGAEUhB,EAAYa,GACfI,MAAK,SAAAb,GAC2B,IAA3BA,EAASc,eACXC,EAAAA,OAAAA,QACE,4EAEFV,KAEAA,EAAkBL,EAASgB,QAE9B,IACAC,OAAM,SAAAC,GAAK,OAAIhB,QAAQC,IAAIe,EAAhB,IAblB,sDAeIhB,QAAQC,IAAR,MAfJ,wDADK,qDAmBLS,GACD,CACF,GAAE,CAACH,KAGF,4BACE,SAAC7B,EAAD,CAAWC,SA7CE,SAAAI,GACf,IAAMkC,EAAalC,EAAMU,OAAOyB,SAASC,MAAM5B,MAAM6B,cAAcC,OAChD,KAAfJ,EACFJ,EAAAA,OAAAA,KAAA,uFAIII,IAAeV,EACjBM,EAAAA,OAAAA,KAAA,oEAIAP,EAAgB,CAAEgB,MAAOL,GAG9B,KA+BG,6BACsBM,IAAnBrB,IACC,SAACrC,EAAA,EAAD,CAAWC,SAAUoC,QAK9B,C","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","components/API/fetch-search-movie.js","components/Pages/Movie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MovieList_List__Qi16k\"};","import { Link, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\n\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ filmList }) => {\n  const location = useLocation();\n  return (\n    <div>\n      {filmList.map(elem => (\n        <li key={elem.id} className={css.List}>\n          <Link\n            to={`/movies/${elem.id}`}\n            state={{ from: location }}\n            className={css.List}\n          >\n            {elem.original_title}\n          </Link>\n        </li>\n      ))}\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  filmList: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__7AAWA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\",\"Icon\":\"Searchbar_Icon__F+OAi\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BiSearch } from 'react-icons/bi';\n\nimport css from './Searchbar.module.css';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [inputText, setInputText] = useState('');\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    onSubmit(event);\n  };\n\n  const onInputChange = event => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <>\n      <header className={css.Searchbar}>\n        <form className={css.SearchForm} onSubmit={onSubmitHandler}>\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <BiSearch className={css.Icon} size={24} />\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"input\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={inputText}\n            onInput={onInputChange}\n          />\n        </form>\n      </header>\n    </>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = '4c3007a9629b6abce42eca24ebb164b2';\n\nconst fetchSearch = async keyword => {\n  if (keyword) {\n    const URL = `https://api.themoviedb.org/3/search/movie?query=${keyword}&api_key=${API_KEY}`;\n    try {\n      const response = await axios.get(URL);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nexport { fetchSearch };\n","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\n\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nimport { MovieList } from '../MovieList/MovieList';\n\nimport { fetchSearch } from 'components/API/fetch-search-movie';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movie = () => {\n  const [searchFilmList, setSearchFilmList] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParams = searchParams.get('query');\n\n  const onSubmit = event => {\n    const inputQuery = event.target.elements.input.value.toLowerCase().trim();\n    if (inputQuery === '') {\n      Notify.info(\n        `It seems you didn't write enything, please specify what exactly you are looking for`\n      );\n    } else {\n      if (inputQuery === queryParams) {\n        Notify.info(\n          `It seems your query duplicate previous, please write another one`\n        );\n      } else {\n        setSearchParams({ query: inputQuery });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (queryParams === '' || queryParams === null) {\n      return;\n    } else {\n      async function searchMovies() {\n        try {\n          await fetchSearch(queryParams)\n            .then(response => {\n              if (response.total_results === 0) {\n                Notify.warning(\n                  'Sorry, there are no movies matching your search query. Please try again.'\n                );\n                setSearchFilmList();\n              } else {\n                setSearchFilmList(response.results);\n              }\n            })\n            .catch(error => console.log(error));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      searchMovies();\n    }\n  }, [queryParams]);\n\n  return (\n    <div>\n      <Searchbar onSubmit={onSubmit} />\n      <ul>\n        {searchFilmList !== undefined && (\n          <MovieList filmList={searchFilmList} />\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movie;\n"],"names":["MovieList","filmList","location","useLocation","map","elem","className","css","to","id","state","from","original_title","Searchbar","onSubmit","useState","inputText","setInputText","event","preventDefault","type","size","autoComplete","name","autoFocus","placeholder","value","onInput","target","fetchSearch","keyword","URL","axios","response","data","console","log","searchFilmList","setSearchFilmList","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","searchMovies","then","total_results","Notify","results","catch","error","inputQuery","elements","input","toLowerCase","trim","query","undefined"],"sourceRoot":""}